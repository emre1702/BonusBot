<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EqualizerParamsError" xml:space="preserve">
    <value>Gain value must be between -0.25 - 1.0 and Band value must be between 0 - 14.</value>
  </data>
  <data name="FoundTracksAmountInfo" xml:space="preserve">
    <value>Found {0} tracks.</value>
  </data>
  <data name="GetVolumeInfo" xml:space="preserve">
    <value>Current volume: {0}.</value>
  </data>
  <data name="LavaLinkLoadError" xml:space="preserve">
    <value>Load failed. The url could be wrong or there could be an internal problem.</value>
  </data>
  <data name="LavaLinkNoMatchesError" xml:space="preserve">
    <value>Nothing found.</value>
  </data>
  <data name="LyricsForInfo" xml:space="preserve">
    <value>Lyrics for: {0}</value>
  </data>
  <data name="LyricsNotFoundError" xml:space="preserve">
    <value>Lyrics could not be found for '{0}'.</value>
  </data>
  <data name="NegativeStartOrStopError" xml:space="preserve">
    <value>Start and stop must be atleast 0.</value>
  </data>
  <data name="NoPlayerForGuildError" xml:space="preserve">
    <value>I'm currently not connected to a voice channel or maybe can't play a song at this time.</value>
  </data>
  <data name="NotConnectToVoiceChannel" xml:space="preserve">
    <value>You're not connected to a voice channel.</value>
  </data>
  <data name="NothingPlayingError" xml:space="preserve">
    <value>This operation is invalid since player isn't actually playing anything.</value>
  </data>
  <data name="NotInitializedYetError" xml:space="preserve">
    <value>This module has not been initialized yet.</value>
  </data>
  <data name="NoTrackRunningError" xml:space="preserve">
    <value>Currently there is no track running.</value>
  </data>
  <data name="NoTrackToReplayError" xml:space="preserve">
    <value>There is no track to replay.</value>
  </data>
  <data name="NoVolumeSavedError" xml:space="preserve">
    <value>No volume has been saved for this guild yet.</value>
  </data>
  <data name="NowPlayingInfo" xml:space="preserve">
    <value>Now playing: {0}</value>
  </data>
  <data name="PositionLargeThanLengthError" xml:space="preserve">
    <value>The position ({0} - {1}%) is actually larger than the actual length.</value>
  </data>
  <data name="QueueEmptyInfo" xml:space="preserve">
    <value>There are no tracks in the queue.</value>
  </data>
  <data name="ReplayingSongInfo" xml:space="preserve">
    <value>Replaying song: {0}.</value>
  </data>
  <data name="SeekPositionTooHigh" xml:space="preserve">
    <value>The position {0} is greater than current track's length of {1}.</value>
  </data>
  <data name="SetPositionInfo" xml:space="preserve">
    <value>Set position to {0} ({1}%).</value>
  </data>
  <data name="SetPositionWrongFormatError" xml:space="preserve">
    <value>Invalid input.
Please use ?% for percent, ?s for seconds, ?m for minutes or minutes:seconds for a specific time.</value>
  </data>
  <data name="SetVolumeInfo" xml:space="preserve">
    <value>Changed volume to {0}.</value>
  </data>
  <data name="ShuffleInfo" xml:space="preserve">
    <value>The queue is now shuffled.</value>
  </data>
  <data name="SkippedTrackNowPlayingInfo" xml:space="preserve">
    <value>Skipped: {0}
Now playing: {1}</value>
  </data>
  <data name="SkippedTrackNowStoppedInfo" xml:space="preserve">
    <value>Skipped: {0}
There are no more tracks left in the queue.</value>
  </data>
  <data name="StartTimeLessThanStopTimeError" xml:space="preserve">
    <value>Stop time must be greater than start time.</value>
  </data>
  <data name="TrackHasBeenEnqueuedInfo" xml:space="preserve">
    <value>{0} has been put into the queue.</value>
  </data>
  <data name="NoLastSearchError" xml:space="preserve">
    <value>You haven't use the search command yet. Search for a song first.</value>
  </data>
  <data name="LastSearchEmptyError" xml:space="preserve">
    <value>The last search result was empty. There are no songs to play.</value>
  </data>
  <data name="SongAtThisSearchNumberNotExistsError" xml:space="preserve">
    <value>A song at this search number does not exist.</value>
  </data>
  <data name="PlayerIsPausedInfo" xml:space="preserve">
    <value>The player is paused, use the resume command to continue.</value>
  </data>
  <data name="FinishedPlayingNoMoreItemsInQueueInfo" xml:space="preserve">
    <value>Finished playing: {0}. 
There are no more items left in the queue.</value>
  </data>
  <data name="TrackStuckNoMoreItemsInQueueInfo" xml:space="preserve">
    <value>Track {0} got stuck for {1} ms and therefore skipped.
There are no more items left in the queue.</value>
  </data>
  <data name="TrackStuckNextSongInfo" xml:space="preserve">
    <value>Track {0} got stuck for {1} ms and therefore skipped.
Now playing: {2}</value>
  </data>
  <data name="FinishedPlayingNowPlayingInfo" xml:space="preserve">
    <value>Finished playing: {0}
Now playing: {1}</value>
  </data>
  <data name="OnlyAllowedInGuildChat" xml:space="preserve">
    <value>This command is only allowed in a guild text channel.</value>
  </data>
  <data name="TrackHasBeenRemovedFromQueueInfo" xml:space="preserve">
    <value>Track {0}, requested by {1}, has been removed from the queue.</value>
  </data>
  <data name="PlaylistHasBeenEnqueued" xml:space="preserve">
    <value>The playlist with {0} songs has been enqueued.</value>
  </data>
  <data name="Queue" xml:space="preserve">
    <value>Queue</value>
  </data>
  <data name="RequestedAt" xml:space="preserve">
    <value>Requested at</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="Volume" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="AudioInfoFooter" xml:space="preserve">
    <value>Audio info</value>
  </data>
</root>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BonusBot.AudioModule.Language {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ModuleTexts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ModuleTexts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BonusBot.AudioModule.Language.ModuleTexts", typeof(ModuleTexts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gain value must be between -0.25 - 1.0 and Band value must be between 0 - 14..
        /// </summary>
        internal static string EqualizerParamsError {
            get {
                return ResourceManager.GetString("EqualizerParamsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current volume: {0}..
        /// </summary>
        internal static string GetVolumeInfo {
            get {
                return ResourceManager.GetString("GetVolumeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load failed. The url could be wrong or there could be an internal problem..
        /// </summary>
        internal static string LavaLinkLoadError {
            get {
                return ResourceManager.GetString("LavaLinkLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing found..
        /// </summary>
        internal static string LavaLinkNoMatchesError {
            get {
                return ResourceManager.GetString("LavaLinkNoMatchesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start and stop must be atleast 0..
        /// </summary>
        internal static string NegativeStartOrStopError {
            get {
                return ResourceManager.GetString("NegativeStartOrStopError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re not connected to a voice channel..
        /// </summary>
        internal static string NotConnectToVoiceChannel {
            get {
                return ResourceManager.GetString("NotConnectToVoiceChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is invalid since player isn&apos;t actually playing anything..
        /// </summary>
        internal static string NothingPlayingError {
            get {
                return ResourceManager.GetString("NothingPlayingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This module has not been initialized yet..
        /// </summary>
        internal static string NotInitializedYetError {
            get {
                return ResourceManager.GetString("NotInitializedYetError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No volume has been saved for this guild yet..
        /// </summary>
        internal static string NoVolumeSavedError {
            get {
                return ResourceManager.GetString("NoVolumeSavedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Now playing: {0}.
        /// </summary>
        internal static string NowPlayingInfo {
            get {
                return ResourceManager.GetString("NowPlayingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The position {0} is greater than current track&apos;s length of {1}..
        /// </summary>
        internal static string SeekPositionTooHigh {
            get {
                return ResourceManager.GetString("SeekPositionTooHigh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changed volume to {0}..
        /// </summary>
        internal static string SetVolumeInfo {
            get {
                return ResourceManager.GetString("SetVolumeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop time must be greater than start time..
        /// </summary>
        internal static string StartTimeLessThanStopTimeError {
            get {
                return ResourceManager.GetString("StartTimeLessThanStopTimeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has been put into the playlist..
        /// </summary>
        internal static string TrackHasBeenEnqueuedInfo {
            get {
                return ResourceManager.GetString("TrackHasBeenEnqueuedInfo", resourceCulture);
            }
        }
    }
}
